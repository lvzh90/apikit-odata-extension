#%RAML 0.8
title: Auto-generated RAML for DataGateway
version: "0.1"
traits:
  - orderby:
      queryParameters:
        parms:
          description: The number of pages to return
          type: string
  - top:
      queryParameters:
        parms:
          description: The number of pages to return
          type: number
  - skip:
      queryParameters:
        parms:
          description: The number of pages to return
          type: number
  - filter:
      queryParameters:
        parms:
          description: Collection of filters
          type: array
  - expand:
      queryParameters:
        parms:
          description: Collection of filters
          type: string
  - format:
      queryParameters:
        parms:
          description: Collection of filters
          type: string
  - select:
      queryParameters:
        parms:
          description: Collection of filters
          type: string
  - inlinecount:
      queryParameters:
        parms:
          description: Collection of filters
          type: string
schemas:
  - users: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "edm.name": "users",
        "edm.remoteName": "Users",
        "properties": {
          "userId": {
            "type": "integer",
            "edm.name": "userId",
            "edm.type": "Edm.Int32",
            "edm.key": true,
            "edm.nullable": false
          },
          "name": {
            "type": "string",
            "edm.name": "name",
            "edm.type": "Edm.String",
            "edm.key": false,
            "edm.nullable": true
          },
          "age": {
            "type": "integer",
            "edm.name": "age",
            "edm.type": "Edm.Int32",
            "edm.key": false,
            "edm.nullable": true
          }
        }
      }
  - customers: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "edm.name": "customers",
        "edm.remoteName": "Customer",
        "properties": {
          "name": {
            "type": "string",
            "edm.name": "name",
            "edm.type": "Edm.String",
            "edm.key": true,
            "edm.nullable": true
          },
          "age": {
            "type": "integer",
            "edm.name": "age",
            "edm.type": "Edm.Int32",
            "edm.key": true,
            "edm.nullable": true
          },
          "zebra": {
            "type": "integer",
            "edm.name": "zebra",
            "edm.type": "Edm.Int32",
            "edm.key": true,
            "edm.nullable": true
          },
        }
      }

  - Weird-resource_NAME: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "edm.name": "Weird-resource_NAME",
        "edm.remoteName": "Weird-resource_NAME",
        "properties": {
          "just-A_key": {
            "edm.name": "just-A_key",
            "type": "string",
            "edm.type": "Edm.String",
            "edm.key": true,
            "edm.nullable": true
          },
          "ANOTHER-strange_Key": {
            "edm.name": "ANOTHER-strange_Key",
            "type": "string",
            "edm.type": "Edm.String",
            "edm.key": true,
            "edm.nullable": true
          }
        }
      }

/users:
  get:
    description: Read
    is: [orderby, top, skip, filter, expand, format, select, inlinecount]
    responses:
      200:
        body:
          application/json: ~
          application/xml: ~
  post:
    description: Create
  /{id}:
    get:
      description: Read
      is: [orderby, top, skip, filter, expand, format, select, inlinecount]
      responses:
        200:
          body:
            application/json: ~
            application/xml: ~
    delete:
      description: Delete
    put:
      description: Update

/customers:
  get:
    description: Read
    is: [orderby, top, skip, filter, expand, format, select, inlinecount]
    responses:
      200:
        body:
          application/json: ~
          application/xml: ~
  post:
    description: Create
  /{id}:
    get:
      description: Read
      is: [orderby, top, skip, filter, expand, format, select, inlinecount]
      responses:
        200:
          body:
            application/json: ~
            application/xml: ~
    delete:
      description: Delete
    put:
      description: Update

/Weird-resource_NAME:
  get:
    description: Read
    is: [orderby, top, skip, filter, expand, format, select, inlinecount]
    responses:
      200:
        body:
          application/json: ~
          application/xml: ~
  post:
    description: Create
  /{id}:
    get:
      description: Read
      is: [orderby, top, skip, filter, expand, format, select, inlinecount]
      responses:
        200:
          body:
            application/json: ~
            application/xml: ~
    delete:
      description: Delete
    put:
      description: Update
