#%RAML 0.8
title: Auto-generated RAML for DataGateway
version: "0.1"
traits:
  - orderby:
      queryParameters:
        parms:
          description: The number of pages to return
          type: string
  - top:
      queryParameters:
        parms:
          description: The number of pages to return
          type: number
  - skip:
      queryParameters:
        parms:
          description: The number of pages to return
          type: number
  - filter:
      queryParameters:
        parms:
          description: Collection of filters
          type: array
  - expand:
      queryParameters:
        parms:
          description: Collection of filters
          type: string
  - format:
      queryParameters:
        parms:
          description: Collection of filters
          type: string
  - select:
      queryParameters:
        parms:
          description: Collection of filters
          type: string
  - inlinecount:
      queryParameters:
        parms:
          description: Collection of filters
          type: string
schemas: 
  - orders: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "name": "orders",
        "remoteName": "Orders",
        "hasPrimaryKey": true,
        "properties": {
          "OrderID": {
            "sample": "10248",
            "fieldName": "OrderID",
            "type": "integer",
            "maxLength": "11",
            "description": "",
            "key": true,
            "nullable": false
          },
          "ShipName": {
            "sample": "",
            "fieldName": "ShipName",
            "type": "string",
            "maxLength": "40",
            "description": "",
            "key": false,
            "nullable": true
          },
          "ShipAddress": {
            "sample": "60",
            "fieldName": "ShipAddress",
            "type": "string",
            "maxLength": "60",
            "description": "",
            "key": false,
            "nullable": true
          }
        }
      }
  - customers: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "name": "customers",
        "remoteName": "Customers",
        "hasPrimaryKey": true,
        "properties": {
          "CustomerID": {
            "sample": "10248",
            "fieldName": "CustomerID",
            "type": "string",
            "maxLength": "5",
            "description": "",
            "key": true,
            "nullable": false
          },
          "CompanyName": {
            "sample": "",
            "fieldName": "CompanyName",
            "type": "string",
            "maxLength": "40",
            "description": "",
            "key": false,
            "nullable": true
          },
          "ContactName": {
            "sample": "",
            "fieldName": "ContactName",
            "type": "string",
            "maxLength": "30",
            "description": "",
            "key": false,
            "nullable": true
          },
          "ContactTitle": {
            "sample": "",
            "fieldName": "ContactTitle",
            "type": "string",
            "maxLength": "30",
            "description": "",
            "key": false,
            "nullable": true
          }
        }
      }

/orders: 
  get: 
    description: Read
    is: [orderby, top, skip, filter, expand, format, select, inlinecount]
    responses:
      200:
        body:
          application/json: ~
          application/xml: ~
  post: 
    description: Create    
  /{id}: 
    get: 
      description: Read
      is: [orderby, top, skip, filter, expand, format, select, inlinecount]
      responses:
        200:
          body:
            application/json: ~
            application/xml: ~
    delete: 
      description: Delete      
    put: 
      description: Update      

/customers: 
  get: 
    description: Read
    is: [orderby, top, skip, filter, expand, format, select, inlinecount]
    responses:
      200:
        body:
          application/json: ~
          application/xml: ~    
  post: 
    description: Create    
  /{id}: 
    get: 
      description: Read
      is: [orderby, top, skip, filter, expand, format, select, inlinecount]
      responses:
        200:
          body:
            application/json: ~
            application/xml: ~             
    delete: 
      description: Delete      
    put: 
      description: Update